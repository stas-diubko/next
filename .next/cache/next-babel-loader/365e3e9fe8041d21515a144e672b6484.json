{"ast":null,"code":"var _jsxFileName = \"C:\\\\diubko\\\\SSR Next.js\\\\next-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Header from '../components/Header';\n// import Layout from '../components/layout';\n// import fetch from 'isomorphic-unfetch';\n// const Index = props =>(\n//     <Layout>\n//       <div className='home-wrap'>\n//         <Header />\n//         <h2>Products</h2>\n//         <ul>\n//           {/* {props.shows.map(show => (\n//             <li key={show.id}>\n//               <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n//                 <h4>{show.title}</h4>\n//               </Link>\n//             </li>\n//           ))} */}\n//         </ul>\n//         <style jsx>{\n//               `\n//               h2 {\n//                   margin-left: 30px;\n//                   font-family: Arial;\n//                   font-size: 24px;\n//                   color: grey;\n//               }\n//               `\n//         }</style>\n//       </div>\n//     </Layout>\n//   );\n// Index.getInitialProps = async function() {\n//   const res = await fetch('https://jsonplaceholder.typicode.com/photos?albumId=1');\n//   const data = await res.json();\n//   // console.log(`Show data fetched. Count: ${data}`);\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n// export default Index;\nimport Layout from '../components/layout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nexport default function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.shows.map(show => __jsx(\"li\", {\n    key: show.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${show.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, show.name))))));\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  console.log(data);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n}; // export default Index;","map":{"version":3,"sources":["C:/diubko/SSR Next.js/next-app/pages/index.js"],"names":["Layout","Link","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AACpC,SACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACnB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CAFF,CADA;AAcD;;AAEDN,KAAK,CAACO,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMU,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAO;AACLP,IAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAASW,KAAK,IAAIA,KAAK,CAACV,IAAxB;AADF,GAAP;AAGD,CATD,C,CAWA","sourcesContent":["// import Header from '../components/Header';\r\n// import Layout from '../components/layout';\r\n// import fetch from 'isomorphic-unfetch';\r\n\r\n// const Index = props =>(\r\n//     <Layout>\r\n//       <div className='home-wrap'>\r\n//         <Header />\r\n//         <h2>Products</h2>\r\n\r\n//         <ul>\r\n//           {/* {props.shows.map(show => (\r\n//             <li key={show.id}>\r\n//               <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n//                 <h4>{show.title}</h4>\r\n//               </Link>\r\n//             </li>\r\n//           ))} */}\r\n//         </ul>\r\n\r\n//         <style jsx>{\r\n//               `\r\n//               h2 {\r\n//                   margin-left: 30px;\r\n//                   font-family: Arial;\r\n//                   font-size: 24px;\r\n//                   color: grey;\r\n//               }\r\n//               `\r\n//         }</style>\r\n//       </div>\r\n//     </Layout>\r\n//   );\r\n\r\n// Index.getInitialProps = async function() {\r\n//   const res = await fetch('https://jsonplaceholder.typicode.com/photos?albumId=1');\r\n//   const data = await res.json();\r\n\r\n//   // console.log(`Show data fetched. Count: ${data}`);\r\n\r\n//   return {\r\n//     shows: data.map(entry => entry.show)\r\n//   };\r\n// };\r\n\r\n// export default Index;\r\n\r\n\r\n\r\nimport Layout from '../components/layout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nexport default function Index (props) {\r\n  return(\r\n  <Layout>\r\n    <h1>Batman TV Shows</h1>\r\n    <ul>\r\n      {props.shows.map(show => (\r\n        <li key={show.id}>\r\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Layout>\r\n);\r\n}\r\n\r\nIndex.getInitialProps = async function() {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n  console.log(data)\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\n// export default Index;"]},"metadata":{},"sourceType":"module"}